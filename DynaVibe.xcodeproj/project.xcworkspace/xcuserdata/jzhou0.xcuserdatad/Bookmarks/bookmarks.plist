<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>top-level-items</key>
	<array>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>13</string>
					<key>EndingLineNumber</key>
					<string>177</string>
					<key>StartingColumnNumber</key>
					<string>13</string>
					<key>StartingLineNumber</key>
					<string>177</string>
					<key>Timestamp</key>
					<string>769742271.096228</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>    func startMeasurement() {
        guard self.measurementState == .idle else { return }
        self.</string>
				<key>trailing</key>
				<string>resetDataForNewRecording()
        
        if self.recordingStartDelaySetting &gt; 0 {
</string>
			</dict>
			<key>title</key>
			<string>Error: Value of type 'AccelerationViewModel' has no member 'resetDataForNewRecording'</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>39</string>
					<key>EndingLineNumber</key>
					<string>234</string>
					<key>StartingColumnNumber</key>
					<string>39</string>
					<key>StartingLineNumber</key>
					<string>234</string>
					<key>Timestamp</key>
					<string>769742271.09627</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>        self.dataFetchTimer?.invalidate()
        self.dataFetchTimer = Timer.scheduledTimer(withTimeInterval:max(0.005,fetchInterval/2.0),repeats:true){ [weak self] _ in
            Task { @MainActor in self?.</string>
				<key>trailing</key>
				<string>captureNewSamples() }
        }
        
</string>
			</dict>
			<key>title</key>
			<string>Error: Value of type 'AccelerationViewModel' has no member 'captureNewSamples'</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>135</string>
					<key>EndingLineNumber</key>
					<string>250</string>
					<key>StartingColumnNumber</key>
					<string>135</string>
					<key>StartingLineNumber</key>
					<string>250</string>
					<key>Timestamp</key>
					<string>769742271.096279</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>                    } else { let windowDur = 10.0; s.axisRanges.minX = max(0, s.elapsedTime - windowDur); s.axisRanges.maxX = s.elapsedTime + 0.2 }
                }
                if s.autoStopRecordingEnabled &amp;&amp; s.measurementDurationSetting &gt; 0 &amp;&amp; s.elapsedTime &gt;= s.measurementDurationSetting { s.</string>
				<key>trailing</key>
				<string>stopMeasurement() }
            }
        }}
</string>
			</dict>
			<key>title</key>
			<string>Error: Value of type 'AccelerationViewModel' has no member 'stopMeasurement'</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>31</string>
					<key>EndingLineNumber</key>
					<string>257</string>
					<key>StartingColumnNumber</key>
					<string>31</string>
					<key>StartingLineNumber</key>
					<string>257</string>
					<key>Timestamp</key>
					<string>769742271.09629</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>    @MainActor
    func stopMeasurement() {
        let wasPreRecording = (</string>
				<key>trailing</key>
				<string>self.measurementState == .preRecordingCountdown)
        
        self.preRecordingDelayTimer?.invalidate(); self.preRecordingDelayTimer=nil
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>8</string>
					<key>EndingLineNumber</key>
					<string>259</string>
					<key>StartingColumnNumber</key>
					<string>8</string>
					<key>StartingLineNumber</key>
					<string>259</string>
					<key>Timestamp</key>
					<string>769742271.0963</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>        let wasPreRecording = (self.measurementState == .preRecordingCountdown)
        
        </string>
				<key>trailing</key>
				<string>self.preRecordingDelayTimer?.invalidate(); self.preRecordingDelayTimer=nil
        self.durationCountdownTimer?.invalidate(); self.durationCountdownTimer=nil
        self.dataFetchTimer?.invalidate(); self.dataFetchTimer=nil
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>51</string>
					<key>EndingLineNumber</key>
					<string>259</string>
					<key>StartingColumnNumber</key>
					<string>51</string>
					<key>StartingLineNumber</key>
					<string>259</string>
					<key>Timestamp</key>
					<string>769742271.0963089</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>        let wasPreRecording = (self.measurementState == .preRecordingCountdown)
        
        self.preRecordingDelayTimer?.invalidate(); </string>
				<key>trailing</key>
				<string>self.preRecordingDelayTimer=nil
        self.durationCountdownTimer?.invalidate(); self.durationCountdownTimer=nil
        self.dataFetchTimer?.invalidate(); self.dataFetchTimer=nil
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>8</string>
					<key>EndingLineNumber</key>
					<string>260</string>
					<key>StartingColumnNumber</key>
					<string>8</string>
					<key>StartingLineNumber</key>
					<string>260</string>
					<key>Timestamp</key>
					<string>769742271.09632</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>        
        self.preRecordingDelayTimer?.invalidate(); self.preRecordingDelayTimer=nil
        </string>
				<key>trailing</key>
				<string>self.durationCountdownTimer?.invalidate(); self.durationCountdownTimer=nil
        self.dataFetchTimer?.invalidate(); self.dataFetchTimer=nil
        
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>51</string>
					<key>EndingLineNumber</key>
					<string>260</string>
					<key>StartingColumnNumber</key>
					<string>51</string>
					<key>StartingLineNumber</key>
					<string>260</string>
					<key>Timestamp</key>
					<string>769742271.09633</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>        
        self.preRecordingDelayTimer?.invalidate(); self.preRecordingDelayTimer=nil
        self.durationCountdownTimer?.invalidate(); </string>
				<key>trailing</key>
				<string>self.durationCountdownTimer=nil
        self.dataFetchTimer?.invalidate(); self.dataFetchTimer=nil
        
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>8</string>
					<key>EndingLineNumber</key>
					<string>261</string>
					<key>StartingColumnNumber</key>
					<string>8</string>
					<key>StartingLineNumber</key>
					<string>261</string>
					<key>Timestamp</key>
					<string>769742271.0963399</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>        self.preRecordingDelayTimer?.invalidate(); self.preRecordingDelayTimer=nil
        self.durationCountdownTimer?.invalidate(); self.durationCountdownTimer=nil
        </string>
				<key>trailing</key>
				<string>self.dataFetchTimer?.invalidate(); self.dataFetchTimer=nil
        
        if self.isRecording{
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>43</string>
					<key>EndingLineNumber</key>
					<string>261</string>
					<key>StartingColumnNumber</key>
					<string>43</string>
					<key>StartingLineNumber</key>
					<string>261</string>
					<key>Timestamp</key>
					<string>769742271.09635</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>        self.preRecordingDelayTimer?.invalidate(); self.preRecordingDelayTimer=nil
        self.durationCountdownTimer?.invalidate(); self.durationCountdownTimer=nil
        self.dataFetchTimer?.invalidate(); </string>
				<key>trailing</key>
				<string>self.dataFetchTimer=nil
        
        if self.isRecording{
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>11</string>
					<key>EndingLineNumber</key>
					<string>263</string>
					<key>StartingColumnNumber</key>
					<string>11</string>
					<key>StartingLineNumber</key>
					<string>263</string>
					<key>Timestamp</key>
					<string>769742271.09636</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>        self.dataFetchTimer?.invalidate(); self.dataFetchTimer=nil
        
        if </string>
				<key>trailing</key>
				<string>self.isRecording{
            self.recorder.stopRecording()
            Task{@MainActor in self.captureNewSamples()}
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>12</string>
					<key>EndingLineNumber</key>
					<string>264</string>
					<key>StartingColumnNumber</key>
					<string>12</string>
					<key>StartingLineNumber</key>
					<string>264</string>
					<key>Timestamp</key>
					<string>769742271.096369</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>        
        if self.isRecording{
            </string>
				<key>trailing</key>
				<string>self.recorder.stopRecording()
            Task{@MainActor in self.captureNewSamples()}
        }
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>31</string>
					<key>EndingLineNumber</key>
					<string>265</string>
					<key>StartingColumnNumber</key>
					<string>31</string>
					<key>StartingLineNumber</key>
					<string>265</string>
					<key>Timestamp</key>
					<string>769742271.0963809</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>        if self.isRecording{
            self.recorder.stopRecording()
            Task{@MainActor in </string>
				<key>trailing</key>
				<string>self.captureNewSamples()}
        }
        self.isRecording=false
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>8</string>
					<key>EndingLineNumber</key>
					<string>267</string>
					<key>StartingColumnNumber</key>
					<string>8</string>
					<key>StartingLineNumber</key>
					<string>267</string>
					<key>Timestamp</key>
					<string>769742271.09639</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>            Task{@MainActor in self.captureNewSamples()}
        }
        </string>
				<key>trailing</key>
				<string>self.isRecording=false
        self.measurementState = wasPreRecording ? .idle : .completed
        
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>8</string>
					<key>EndingLineNumber</key>
					<string>268</string>
					<key>StartingColumnNumber</key>
					<string>8</string>
					<key>StartingLineNumber</key>
					<string>268</string>
					<key>Timestamp</key>
					<string>769742271.0964</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>        }
        self.isRecording=false
        </string>
				<key>trailing</key>
				<string>self.measurementState = wasPreRecording ? .idle : .completed
        
        if !wasPreRecording{
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>22</string>
					<key>EndingLineNumber</key>
					<string>271</string>
					<key>StartingColumnNumber</key>
					<string>22</string>
					<key>StartingLineNumber</key>
					<string>271</string>
					<key>Timestamp</key>
					<string>769742271.096409</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>        
        if !wasPreRecording{
            if let sT=</string>
				<key>trailing</key>
				<string>self.recordingActualStartTime{self.elapsedTime=Date().timeIntervalSince(sT)}
            if self.autoStopRecordingEnabled &amp;&amp; self.measurementDurationSetting &gt; 0 {self.timeLeft=max(0,self.measurementDurationSetting-self.elapsedTime)} else {self.timeLeft=0}
            let fMT=Axis.allCases.compactMap{self.timeSeriesData[$0]?.last?.timestamp}.max() ?? self.elapsedTime
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>52</string>
					<key>EndingLineNumber</key>
					<string>271</string>
					<key>StartingColumnNumber</key>
					<string>52</string>
					<key>StartingLineNumber</key>
					<string>271</string>
					<key>Timestamp</key>
					<string>769742271.096419</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>        
        if !wasPreRecording{
            if let sT=self.recordingActualStartTime{</string>
				<key>trailing</key>
				<string>self.elapsedTime=Date().timeIntervalSince(sT)}
            if self.autoStopRecordingEnabled &amp;&amp; self.measurementDurationSetting &gt; 0 {self.timeLeft=max(0,self.measurementDurationSetting-self.elapsedTime)} else {self.timeLeft=0}
            let fMT=Axis.allCases.compactMap{self.timeSeriesData[$0]?.last?.timestamp}.max() ?? self.elapsedTime
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>15</string>
					<key>EndingLineNumber</key>
					<string>272</string>
					<key>StartingColumnNumber</key>
					<string>15</string>
					<key>StartingLineNumber</key>
					<string>272</string>
					<key>Timestamp</key>
					<string>769742271.096429</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>        if !wasPreRecording{
            if let sT=self.recordingActualStartTime{self.elapsedTime=Date().timeIntervalSince(sT)}
            if </string>
				<key>trailing</key>
				<string>self.autoStopRecordingEnabled &amp;&amp; self.measurementDurationSetting &gt; 0 {self.timeLeft=max(0,self.measurementDurationSetting-self.elapsedTime)} else {self.timeLeft=0}
            let fMT=Axis.allCases.compactMap{self.timeSeriesData[$0]?.last?.timestamp}.max() ?? self.elapsedTime
            self.axisRanges.minX = 0
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>48</string>
					<key>EndingLineNumber</key>
					<string>272</string>
					<key>StartingColumnNumber</key>
					<string>48</string>
					<key>StartingLineNumber</key>
					<string>272</string>
					<key>Timestamp</key>
					<string>769742271.0964381</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>        if !wasPreRecording{
            if let sT=self.recordingActualStartTime{self.elapsedTime=Date().timeIntervalSince(sT)}
            if self.autoStopRecordingEnabled &amp;&amp; </string>
				<key>trailing</key>
				<string>self.measurementDurationSetting &gt; 0 {self.timeLeft=max(0,self.measurementDurationSetting-self.elapsedTime)} else {self.timeLeft=0}
            let fMT=Axis.allCases.compactMap{self.timeSeriesData[$0]?.last?.timestamp}.max() ?? self.elapsedTime
            self.axisRanges.minX = 0
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>85</string>
					<key>EndingLineNumber</key>
					<string>272</string>
					<key>StartingColumnNumber</key>
					<string>85</string>
					<key>StartingLineNumber</key>
					<string>272</string>
					<key>Timestamp</key>
					<string>769742271.0964479</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>        if !wasPreRecording{
            if let sT=self.recordingActualStartTime{self.elapsedTime=Date().timeIntervalSince(sT)}
            if self.autoStopRecordingEnabled &amp;&amp; self.measurementDurationSetting &gt; 0 {</string>
				<key>trailing</key>
				<string>self.timeLeft=max(0,self.measurementDurationSetting-self.elapsedTime)} else {self.timeLeft=0}
            let fMT=Axis.allCases.compactMap{self.timeSeriesData[$0]?.last?.timestamp}.max() ?? self.elapsedTime
            self.axisRanges.minX = 0
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>105</string>
					<key>EndingLineNumber</key>
					<string>272</string>
					<key>StartingColumnNumber</key>
					<string>105</string>
					<key>StartingLineNumber</key>
					<string>272</string>
					<key>Timestamp</key>
					<string>769742271.096458</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>        if !wasPreRecording{
            if let sT=self.recordingActualStartTime{self.elapsedTime=Date().timeIntervalSince(sT)}
            if self.autoStopRecordingEnabled &amp;&amp; self.measurementDurationSetting &gt; 0 {self.timeLeft=max(0,</string>
				<key>trailing</key>
				<string>self.measurementDurationSetting-self.elapsedTime)} else {self.timeLeft=0}
            let fMT=Axis.allCases.compactMap{self.timeSeriesData[$0]?.last?.timestamp}.max() ?? self.elapsedTime
            self.axisRanges.minX = 0
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>137</string>
					<key>EndingLineNumber</key>
					<string>272</string>
					<key>StartingColumnNumber</key>
					<string>137</string>
					<key>StartingLineNumber</key>
					<string>272</string>
					<key>Timestamp</key>
					<string>769742271.096467</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>        if !wasPreRecording{
            if let sT=self.recordingActualStartTime{self.elapsedTime=Date().timeIntervalSince(sT)}
            if self.autoStopRecordingEnabled &amp;&amp; self.measurementDurationSetting &gt; 0 {self.timeLeft=max(0,self.measurementDurationSetting-</string>
				<key>trailing</key>
				<string>self.elapsedTime)} else {self.timeLeft=0}
            let fMT=Axis.allCases.compactMap{self.timeSeriesData[$0]?.last?.timestamp}.max() ?? self.elapsedTime
            self.axisRanges.minX = 0
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>162</string>
					<key>EndingLineNumber</key>
					<string>272</string>
					<key>StartingColumnNumber</key>
					<string>162</string>
					<key>StartingLineNumber</key>
					<string>272</string>
					<key>Timestamp</key>
					<string>769742271.096477</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>        if !wasPreRecording{
            if let sT=self.recordingActualStartTime{self.elapsedTime=Date().timeIntervalSince(sT)}
            if self.autoStopRecordingEnabled &amp;&amp; self.measurementDurationSetting &gt; 0 {self.timeLeft=max(0,self.measurementDurationSetting-self.elapsedTime)} else {</string>
				<key>trailing</key>
				<string>self.timeLeft=0}
            let fMT=Axis.allCases.compactMap{self.timeSeriesData[$0]?.last?.timestamp}.max() ?? self.elapsedTime
            self.axisRanges.minX = 0
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>45</string>
					<key>EndingLineNumber</key>
					<string>273</string>
					<key>StartingColumnNumber</key>
					<string>45</string>
					<key>StartingLineNumber</key>
					<string>273</string>
					<key>Timestamp</key>
					<string>769742271.096488</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>            if let sT=self.recordingActualStartTime{self.elapsedTime=Date().timeIntervalSince(sT)}
            if self.autoStopRecordingEnabled &amp;&amp; self.measurementDurationSetting &gt; 0 {self.timeLeft=max(0,self.measurementDurationSetting-self.elapsedTime)} else {self.timeLeft=0}
            let fMT=Axis.allCases.compactMap{</string>
				<key>trailing</key>
				<string>self.timeSeriesData[$0]?.last?.timestamp}.max() ?? self.elapsedTime
            self.axisRanges.minX = 0
            self.axisRanges.maxX=max(fMT,self.currentEffectiveMaxGraphDuration)
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>96</string>
					<key>EndingLineNumber</key>
					<string>273</string>
					<key>StartingColumnNumber</key>
					<string>96</string>
					<key>StartingLineNumber</key>
					<string>273</string>
					<key>Timestamp</key>
					<string>769742271.096501</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>            if let sT=self.recordingActualStartTime{self.elapsedTime=Date().timeIntervalSince(sT)}
            if self.autoStopRecordingEnabled &amp;&amp; self.measurementDurationSetting &gt; 0 {self.timeLeft=max(0,self.measurementDurationSetting-self.elapsedTime)} else {self.timeLeft=0}
            let fMT=Axis.allCases.compactMap{self.timeSeriesData[$0]?.last?.timestamp}.max() ?? </string>
				<key>trailing</key>
				<string>self.elapsedTime
            self.axisRanges.minX = 0
            self.axisRanges.maxX=max(fMT,self.currentEffectiveMaxGraphDuration)
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>12</string>
					<key>EndingLineNumber</key>
					<string>274</string>
					<key>StartingColumnNumber</key>
					<string>12</string>
					<key>StartingLineNumber</key>
					<string>274</string>
					<key>Timestamp</key>
					<string>769742271.0965101</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>            if self.autoStopRecordingEnabled &amp;&amp; self.measurementDurationSetting &gt; 0 {self.timeLeft=max(0,self.measurementDurationSetting-self.elapsedTime)} else {self.timeLeft=0}
            let fMT=Axis.allCases.compactMap{self.timeSeriesData[$0]?.last?.timestamp}.max() ?? self.elapsedTime
            </string>
				<key>trailing</key>
				<string>self.axisRanges.minX = 0
            self.axisRanges.maxX=max(fMT,self.currentEffectiveMaxGraphDuration)
            if self.collectedSamplesCount&gt;0{self.rmsX=self.calculateOverallRMS(for:.x);self.rmsY=self.calculateOverallRMS(for:.y);self.rmsZ=self.calculateOverallRMS(for:.z)}else{self.resetRMSValuesAndAttitude()}
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>12</string>
					<key>EndingLineNumber</key>
					<string>275</string>
					<key>StartingColumnNumber</key>
					<string>12</string>
					<key>StartingLineNumber</key>
					<string>275</string>
					<key>Timestamp</key>
					<string>769742271.0965199</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>            let fMT=Axis.allCases.compactMap{self.timeSeriesData[$0]?.last?.timestamp}.max() ?? self.elapsedTime
            self.axisRanges.minX = 0
            </string>
				<key>trailing</key>
				<string>self.axisRanges.maxX=max(fMT,self.currentEffectiveMaxGraphDuration)
            if self.collectedSamplesCount&gt;0{self.rmsX=self.calculateOverallRMS(for:.x);self.rmsY=self.calculateOverallRMS(for:.y);self.rmsZ=self.calculateOverallRMS(for:.z)}else{self.resetRMSValuesAndAttitude()}
            self.calculateActualAverageRate()
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>41</string>
					<key>EndingLineNumber</key>
					<string>275</string>
					<key>StartingColumnNumber</key>
					<string>41</string>
					<key>StartingLineNumber</key>
					<string>275</string>
					<key>Timestamp</key>
					<string>769742271.09653</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>            let fMT=Axis.allCases.compactMap{self.timeSeriesData[$0]?.last?.timestamp}.max() ?? self.elapsedTime
            self.axisRanges.minX = 0
            self.axisRanges.maxX=max(fMT,</string>
				<key>trailing</key>
				<string>self.currentEffectiveMaxGraphDuration)
            if self.collectedSamplesCount&gt;0{self.rmsX=self.calculateOverallRMS(for:.x);self.rmsY=self.calculateOverallRMS(for:.y);self.rmsZ=self.calculateOverallRMS(for:.z)}else{self.resetRMSValuesAndAttitude()}
            self.calculateActualAverageRate()
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>15</string>
					<key>EndingLineNumber</key>
					<string>276</string>
					<key>StartingColumnNumber</key>
					<string>15</string>
					<key>StartingLineNumber</key>
					<string>276</string>
					<key>Timestamp</key>
					<string>769742271.096539</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>            self.axisRanges.minX = 0
            self.axisRanges.maxX=max(fMT,self.currentEffectiveMaxGraphDuration)
            if </string>
				<key>trailing</key>
				<string>self.collectedSamplesCount&gt;0{self.rmsX=self.calculateOverallRMS(for:.x);self.rmsY=self.calculateOverallRMS(for:.y);self.rmsZ=self.calculateOverallRMS(for:.z)}else{self.resetRMSValuesAndAttitude()}
            self.calculateActualAverageRate()
            if self.collectedSamplesCount&gt;0{self.computeFFT()}else{self.isFFTReady=false;self.calculatedActualAverageSamplingRateForFFT=nil}
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>44</string>
					<key>EndingLineNumber</key>
					<string>276</string>
					<key>StartingColumnNumber</key>
					<string>44</string>
					<key>StartingLineNumber</key>
					<string>276</string>
					<key>Timestamp</key>
					<string>769742271.096549</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>            self.axisRanges.minX = 0
            self.axisRanges.maxX=max(fMT,self.currentEffectiveMaxGraphDuration)
            if self.collectedSamplesCount&gt;0{</string>
				<key>trailing</key>
				<string>self.rmsX=self.calculateOverallRMS(for:.x);self.rmsY=self.calculateOverallRMS(for:.y);self.rmsZ=self.calculateOverallRMS(for:.z)}else{self.resetRMSValuesAndAttitude()}
            self.calculateActualAverageRate()
            if self.collectedSamplesCount&gt;0{self.computeFFT()}else{self.isFFTReady=false;self.calculatedActualAverageSamplingRateForFFT=nil}
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>54</string>
					<key>EndingLineNumber</key>
					<string>276</string>
					<key>StartingColumnNumber</key>
					<string>54</string>
					<key>StartingLineNumber</key>
					<string>276</string>
					<key>Timestamp</key>
					<string>769742271.096558</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>            self.axisRanges.minX = 0
            self.axisRanges.maxX=max(fMT,self.currentEffectiveMaxGraphDuration)
            if self.collectedSamplesCount&gt;0{self.rmsX=</string>
				<key>trailing</key>
				<string>self.calculateOverallRMS(for:.x);self.rmsY=self.calculateOverallRMS(for:.y);self.rmsZ=self.calculateOverallRMS(for:.z)}else{self.resetRMSValuesAndAttitude()}
            self.calculateActualAverageRate()
            if self.collectedSamplesCount&gt;0{self.computeFFT()}else{self.isFFTReady=false;self.calculatedActualAverageSamplingRateForFFT=nil}
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>84</string>
					<key>EndingLineNumber</key>
					<string>276</string>
					<key>StartingColumnNumber</key>
					<string>84</string>
					<key>StartingLineNumber</key>
					<string>276</string>
					<key>Timestamp</key>
					<string>769742271.096568</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>            self.axisRanges.minX = 0
            self.axisRanges.maxX=max(fMT,self.currentEffectiveMaxGraphDuration)
            if self.collectedSamplesCount&gt;0{self.rmsX=self.calculateOverallRMS(for:.</string>
				<key>trailing</key>
				<string>x);self.rmsY=self.calculateOverallRMS(for:.y);self.rmsZ=self.calculateOverallRMS(for:.z)}else{self.resetRMSValuesAndAttitude()}
            self.calculateActualAverageRate()
            if self.collectedSamplesCount&gt;0{self.computeFFT()}else{self.isFFTReady=false;self.calculatedActualAverageSamplingRateForFFT=nil}
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot infer contextual base in reference to member 'x'</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>87</string>
					<key>EndingLineNumber</key>
					<string>276</string>
					<key>StartingColumnNumber</key>
					<string>87</string>
					<key>StartingLineNumber</key>
					<string>276</string>
					<key>Timestamp</key>
					<string>769742271.096578</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>            self.axisRanges.minX = 0
            self.axisRanges.maxX=max(fMT,self.currentEffectiveMaxGraphDuration)
            if self.collectedSamplesCount&gt;0{self.rmsX=self.calculateOverallRMS(for:.x);</string>
				<key>trailing</key>
				<string>self.rmsY=self.calculateOverallRMS(for:.y);self.rmsZ=self.calculateOverallRMS(for:.z)}else{self.resetRMSValuesAndAttitude()}
            self.calculateActualAverageRate()
            if self.collectedSamplesCount&gt;0{self.computeFFT()}else{self.isFFTReady=false;self.calculatedActualAverageSamplingRateForFFT=nil}
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>97</string>
					<key>EndingLineNumber</key>
					<string>276</string>
					<key>StartingColumnNumber</key>
					<string>97</string>
					<key>StartingLineNumber</key>
					<string>276</string>
					<key>Timestamp</key>
					<string>769742271.0965869</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>            self.axisRanges.minX = 0
            self.axisRanges.maxX=max(fMT,self.currentEffectiveMaxGraphDuration)
            if self.collectedSamplesCount&gt;0{self.rmsX=self.calculateOverallRMS(for:.x);self.rmsY=</string>
				<key>trailing</key>
				<string>self.calculateOverallRMS(for:.y);self.rmsZ=self.calculateOverallRMS(for:.z)}else{self.resetRMSValuesAndAttitude()}
            self.calculateActualAverageRate()
            if self.collectedSamplesCount&gt;0{self.computeFFT()}else{self.isFFTReady=false;self.calculatedActualAverageSamplingRateForFFT=nil}
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>127</string>
					<key>EndingLineNumber</key>
					<string>276</string>
					<key>StartingColumnNumber</key>
					<string>127</string>
					<key>StartingLineNumber</key>
					<string>276</string>
					<key>Timestamp</key>
					<string>769742271.096596</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>            self.axisRanges.minX = 0
            self.axisRanges.maxX=max(fMT,self.currentEffectiveMaxGraphDuration)
            if self.collectedSamplesCount&gt;0{self.rmsX=self.calculateOverallRMS(for:.x);self.rmsY=self.calculateOverallRMS(for:.</string>
				<key>trailing</key>
				<string>y);self.rmsZ=self.calculateOverallRMS(for:.z)}else{self.resetRMSValuesAndAttitude()}
            self.calculateActualAverageRate()
            if self.collectedSamplesCount&gt;0{self.computeFFT()}else{self.isFFTReady=false;self.calculatedActualAverageSamplingRateForFFT=nil}
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot infer contextual base in reference to member 'y'</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>130</string>
					<key>EndingLineNumber</key>
					<string>276</string>
					<key>StartingColumnNumber</key>
					<string>130</string>
					<key>StartingLineNumber</key>
					<string>276</string>
					<key>Timestamp</key>
					<string>769742271.096606</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>            self.axisRanges.minX = 0
            self.axisRanges.maxX=max(fMT,self.currentEffectiveMaxGraphDuration)
            if self.collectedSamplesCount&gt;0{self.rmsX=self.calculateOverallRMS(for:.x);self.rmsY=self.calculateOverallRMS(for:.y);</string>
				<key>trailing</key>
				<string>self.rmsZ=self.calculateOverallRMS(for:.z)}else{self.resetRMSValuesAndAttitude()}
            self.calculateActualAverageRate()
            if self.collectedSamplesCount&gt;0{self.computeFFT()}else{self.isFFTReady=false;self.calculatedActualAverageSamplingRateForFFT=nil}
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>140</string>
					<key>EndingLineNumber</key>
					<string>276</string>
					<key>StartingColumnNumber</key>
					<string>140</string>
					<key>StartingLineNumber</key>
					<string>276</string>
					<key>Timestamp</key>
					<string>769742271.096615</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>            self.axisRanges.minX = 0
            self.axisRanges.maxX=max(fMT,self.currentEffectiveMaxGraphDuration)
            if self.collectedSamplesCount&gt;0{self.rmsX=self.calculateOverallRMS(for:.x);self.rmsY=self.calculateOverallRMS(for:.y);self.rmsZ=</string>
				<key>trailing</key>
				<string>self.calculateOverallRMS(for:.z)}else{self.resetRMSValuesAndAttitude()}
            self.calculateActualAverageRate()
            if self.collectedSamplesCount&gt;0{self.computeFFT()}else{self.isFFTReady=false;self.calculatedActualAverageSamplingRateForFFT=nil}
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>170</string>
					<key>EndingLineNumber</key>
					<string>276</string>
					<key>StartingColumnNumber</key>
					<string>170</string>
					<key>StartingLineNumber</key>
					<string>276</string>
					<key>Timestamp</key>
					<string>769742271.096625</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>            self.axisRanges.minX = 0
            self.axisRanges.maxX=max(fMT,self.currentEffectiveMaxGraphDuration)
            if self.collectedSamplesCount&gt;0{self.rmsX=self.calculateOverallRMS(for:.x);self.rmsY=self.calculateOverallRMS(for:.y);self.rmsZ=self.calculateOverallRMS(for:.</string>
				<key>trailing</key>
				<string>z)}else{self.resetRMSValuesAndAttitude()}
            self.calculateActualAverageRate()
            if self.collectedSamplesCount&gt;0{self.computeFFT()}else{self.isFFTReady=false;self.calculatedActualAverageSamplingRateForFFT=nil}
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot infer contextual base in reference to member 'z'</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>178</string>
					<key>EndingLineNumber</key>
					<string>276</string>
					<key>StartingColumnNumber</key>
					<string>178</string>
					<key>StartingLineNumber</key>
					<string>276</string>
					<key>Timestamp</key>
					<string>769742271.096635</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>            self.axisRanges.minX = 0
            self.axisRanges.maxX=max(fMT,self.currentEffectiveMaxGraphDuration)
            if self.collectedSamplesCount&gt;0{self.rmsX=self.calculateOverallRMS(for:.x);self.rmsY=self.calculateOverallRMS(for:.y);self.rmsZ=self.calculateOverallRMS(for:.z)}else{</string>
				<key>trailing</key>
				<string>self.resetRMSValuesAndAttitude()}
            self.calculateActualAverageRate()
            if self.collectedSamplesCount&gt;0{self.computeFFT()}else{self.isFFTReady=false;self.calculatedActualAverageSamplingRateForFFT=nil}
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>12</string>
					<key>EndingLineNumber</key>
					<string>277</string>
					<key>StartingColumnNumber</key>
					<string>12</string>
					<key>StartingLineNumber</key>
					<string>277</string>
					<key>Timestamp</key>
					<string>769742271.096645</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>            self.axisRanges.maxX=max(fMT,self.currentEffectiveMaxGraphDuration)
            if self.collectedSamplesCount&gt;0{self.rmsX=self.calculateOverallRMS(for:.x);self.rmsY=self.calculateOverallRMS(for:.y);self.rmsZ=self.calculateOverallRMS(for:.z)}else{self.resetRMSValuesAndAttitude()}
            </string>
				<key>trailing</key>
				<string>self.calculateActualAverageRate()
            if self.collectedSamplesCount&gt;0{self.computeFFT()}else{self.isFFTReady=false;self.calculatedActualAverageSamplingRateForFFT=nil}
        } else{
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>15</string>
					<key>EndingLineNumber</key>
					<string>278</string>
					<key>StartingColumnNumber</key>
					<string>15</string>
					<key>StartingLineNumber</key>
					<string>278</string>
					<key>Timestamp</key>
					<string>769742271.096655</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>            if self.collectedSamplesCount&gt;0{self.rmsX=self.calculateOverallRMS(for:.x);self.rmsY=self.calculateOverallRMS(for:.y);self.rmsZ=self.calculateOverallRMS(for:.z)}else{self.resetRMSValuesAndAttitude()}
            self.calculateActualAverageRate()
            if </string>
				<key>trailing</key>
				<string>self.collectedSamplesCount&gt;0{self.computeFFT()}else{self.isFFTReady=false;self.calculatedActualAverageSamplingRateForFFT=nil}
        } else{
            self.updateIdleStateDisplayValues()
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>44</string>
					<key>EndingLineNumber</key>
					<string>278</string>
					<key>StartingColumnNumber</key>
					<string>44</string>
					<key>StartingLineNumber</key>
					<string>278</string>
					<key>Timestamp</key>
					<string>769742271.096664</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>            if self.collectedSamplesCount&gt;0{self.rmsX=self.calculateOverallRMS(for:.x);self.rmsY=self.calculateOverallRMS(for:.y);self.rmsZ=self.calculateOverallRMS(for:.z)}else{self.resetRMSValuesAndAttitude()}
            self.calculateActualAverageRate()
            if self.collectedSamplesCount&gt;0{</string>
				<key>trailing</key>
				<string>self.computeFFT()}else{self.isFFTReady=false;self.calculatedActualAverageSamplingRateForFFT=nil}
        } else{
            self.updateIdleStateDisplayValues()
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>67</string>
					<key>EndingLineNumber</key>
					<string>278</string>
					<key>StartingColumnNumber</key>
					<string>67</string>
					<key>StartingLineNumber</key>
					<string>278</string>
					<key>Timestamp</key>
					<string>769742271.096674</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>            if self.collectedSamplesCount&gt;0{self.rmsX=self.calculateOverallRMS(for:.x);self.rmsY=self.calculateOverallRMS(for:.y);self.rmsZ=self.calculateOverallRMS(for:.z)}else{self.resetRMSValuesAndAttitude()}
            self.calculateActualAverageRate()
            if self.collectedSamplesCount&gt;0{self.computeFFT()}else{</string>
				<key>trailing</key>
				<string>self.isFFTReady=false;self.calculatedActualAverageSamplingRateForFFT=nil}
        } else{
            self.updateIdleStateDisplayValues()
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>89</string>
					<key>EndingLineNumber</key>
					<string>278</string>
					<key>StartingColumnNumber</key>
					<string>89</string>
					<key>StartingLineNumber</key>
					<string>278</string>
					<key>Timestamp</key>
					<string>769742271.0966851</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>            if self.collectedSamplesCount&gt;0{self.rmsX=self.calculateOverallRMS(for:.x);self.rmsY=self.calculateOverallRMS(for:.y);self.rmsZ=self.calculateOverallRMS(for:.z)}else{self.resetRMSValuesAndAttitude()}
            self.calculateActualAverageRate()
            if self.collectedSamplesCount&gt;0{self.computeFFT()}else{self.isFFTReady=false;</string>
				<key>trailing</key>
				<string>self.calculatedActualAverageSamplingRateForFFT=nil}
        } else{
            self.updateIdleStateDisplayValues()
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>12</string>
					<key>EndingLineNumber</key>
					<string>280</string>
					<key>StartingColumnNumber</key>
					<string>12</string>
					<key>StartingLineNumber</key>
					<string>280</string>
					<key>Timestamp</key>
					<string>769742271.0966949</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>            if self.collectedSamplesCount&gt;0{self.computeFFT()}else{self.isFFTReady=false;self.calculatedActualAverageSamplingRateForFFT=nil}
        } else{
            </string>
				<key>trailing</key>
				<string>self.updateIdleStateDisplayValues()
        }
        self.recordingActualStartTime=nil
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>8</string>
					<key>EndingLineNumber</key>
					<string>282</string>
					<key>StartingColumnNumber</key>
					<string>8</string>
					<key>StartingLineNumber</key>
					<string>282</string>
					<key>Timestamp</key>
					<string>769742271.096705</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>            self.updateIdleStateDisplayValues()
        }
        </string>
				<key>trailing</key>
				<string>self.recordingActualStartTime=nil
        self.preRecordingPhaseStartTime=nil
        if self.useLinearAccelerationSetting {
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>8</string>
					<key>EndingLineNumber</key>
					<string>283</string>
					<key>StartingColumnNumber</key>
					<string>8</string>
					<key>StartingLineNumber</key>
					<string>283</string>
					<key>Timestamp</key>
					<string>769742271.096715</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>        }
        self.recordingActualStartTime=nil
        </string>
				<key>trailing</key>
				<string>self.preRecordingPhaseStartTime=nil
        if self.useLinearAccelerationSetting {
            self.startLiveAttitudeMonitoring()
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>11</string>
					<key>EndingLineNumber</key>
					<string>284</string>
					<key>StartingColumnNumber</key>
					<string>11</string>
					<key>StartingLineNumber</key>
					<string>284</string>
					<key>Timestamp</key>
					<string>769742271.096725</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>        self.recordingActualStartTime=nil
        self.preRecordingPhaseStartTime=nil
        if </string>
				<key>trailing</key>
				<string>self.useLinearAccelerationSetting {
            self.startLiveAttitudeMonitoring()
        }
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>12</string>
					<key>EndingLineNumber</key>
					<string>285</string>
					<key>StartingColumnNumber</key>
					<string>12</string>
					<key>StartingLineNumber</key>
					<string>285</string>
					<key>Timestamp</key>
					<string>769742271.09674</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>        self.preRecordingPhaseStartTime=nil
        if self.useLinearAccelerationSetting {
            </string>
				<key>trailing</key>
				<string>self.startLiveAttitudeMonitoring()
        }
    }
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>11</string>
					<key>EndingLineNumber</key>
					<string>291</string>
					<key>StartingColumnNumber</key>
					<string>11</string>
					<key>StartingLineNumber</key>
					<string>291</string>
					<key>Timestamp</key>
					<string>769742271.0967489</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>    @MainActor
    func resetMeasurement() {
        if </string>
				<key>trailing</key>
				<string>self.isRecording||self.measurementState == .preRecordingCountdown{self.stopMeasurement()};
        self.resetDataForNewRecording()
        self.measurementState = .idle; self.isFFTReady=false; self.elapsedTime=0
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>29</string>
					<key>EndingLineNumber</key>
					<string>291</string>
					<key>StartingColumnNumber</key>
					<string>29</string>
					<key>StartingLineNumber</key>
					<string>291</string>
					<key>Timestamp</key>
					<string>769742271.096759</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>    @MainActor
    func resetMeasurement() {
        if self.isRecording||</string>
				<key>trailing</key>
				<string>self.measurementState == .preRecordingCountdown{self.stopMeasurement()};
        self.resetDataForNewRecording()
        self.measurementState = .idle; self.isFFTReady=false; self.elapsedTime=0
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>77</string>
					<key>EndingLineNumber</key>
					<string>291</string>
					<key>StartingColumnNumber</key>
					<string>77</string>
					<key>StartingLineNumber</key>
					<string>291</string>
					<key>Timestamp</key>
					<string>769742271.096769</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>    @MainActor
    func resetMeasurement() {
        if self.isRecording||self.measurementState == .preRecordingCountdown{</string>
				<key>trailing</key>
				<string>self.stopMeasurement()};
        self.resetDataForNewRecording()
        self.measurementState = .idle; self.isFFTReady=false; self.elapsedTime=0
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>8</string>
					<key>EndingLineNumber</key>
					<string>292</string>
					<key>StartingColumnNumber</key>
					<string>8</string>
					<key>StartingLineNumber</key>
					<string>292</string>
					<key>Timestamp</key>
					<string>769742271.096778</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>    func resetMeasurement() {
        if self.isRecording||self.measurementState == .preRecordingCountdown{self.stopMeasurement()};
        </string>
				<key>trailing</key>
				<string>self.resetDataForNewRecording()
        self.measurementState = .idle; self.isFFTReady=false; self.elapsedTime=0
        self.updateIdleStateDisplayValues()
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>8</string>
					<key>EndingLineNumber</key>
					<string>293</string>
					<key>StartingColumnNumber</key>
					<string>8</string>
					<key>StartingLineNumber</key>
					<string>293</string>
					<key>Timestamp</key>
					<string>769742271.096788</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>        if self.isRecording||self.measurementState == .preRecordingCountdown{self.stopMeasurement()};
        self.resetDataForNewRecording()
        </string>
				<key>trailing</key>
				<string>self.measurementState = .idle; self.isFFTReady=false; self.elapsedTime=0
        self.updateIdleStateDisplayValues()
        self.latestX=0; self.latestY=0; self.latestZ=0; self.calculatedActualAverageSamplingRateForFFT=nil; self.currentRoll=0; self.currentPitch=0
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>39</string>
					<key>EndingLineNumber</key>
					<string>293</string>
					<key>StartingColumnNumber</key>
					<string>39</string>
					<key>StartingLineNumber</key>
					<string>293</string>
					<key>Timestamp</key>
					<string>769742271.096799</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>        if self.isRecording||self.measurementState == .preRecordingCountdown{self.stopMeasurement()};
        self.resetDataForNewRecording()
        self.measurementState = .idle; </string>
				<key>trailing</key>
				<string>self.isFFTReady=false; self.elapsedTime=0
        self.updateIdleStateDisplayValues()
        self.latestX=0; self.latestY=0; self.latestZ=0; self.calculatedActualAverageSamplingRateForFFT=nil; self.currentRoll=0; self.currentPitch=0
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>62</string>
					<key>EndingLineNumber</key>
					<string>293</string>
					<key>StartingColumnNumber</key>
					<string>62</string>
					<key>StartingLineNumber</key>
					<string>293</string>
					<key>Timestamp</key>
					<string>769742271.096809</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>        if self.isRecording||self.measurementState == .preRecordingCountdown{self.stopMeasurement()};
        self.resetDataForNewRecording()
        self.measurementState = .idle; self.isFFTReady=false; </string>
				<key>trailing</key>
				<string>self.elapsedTime=0
        self.updateIdleStateDisplayValues()
        self.latestX=0; self.latestY=0; self.latestZ=0; self.calculatedActualAverageSamplingRateForFFT=nil; self.currentRoll=0; self.currentPitch=0
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>8</string>
					<key>EndingLineNumber</key>
					<string>294</string>
					<key>StartingColumnNumber</key>
					<string>8</string>
					<key>StartingLineNumber</key>
					<string>294</string>
					<key>Timestamp</key>
					<string>769742271.096818</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>        self.resetDataForNewRecording()
        self.measurementState = .idle; self.isFFTReady=false; self.elapsedTime=0
        </string>
				<key>trailing</key>
				<string>self.updateIdleStateDisplayValues()
        self.latestX=0; self.latestY=0; self.latestZ=0; self.calculatedActualAverageSamplingRateForFFT=nil; self.currentRoll=0; self.currentPitch=0
        self.recordingActualStartTime=nil; self.preRecordingPhaseStartTime=nil
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>8</string>
					<key>EndingLineNumber</key>
					<string>295</string>
					<key>StartingColumnNumber</key>
					<string>8</string>
					<key>StartingLineNumber</key>
					<string>295</string>
					<key>Timestamp</key>
					<string>769742271.096828</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>        self.measurementState = .idle; self.isFFTReady=false; self.elapsedTime=0
        self.updateIdleStateDisplayValues()
        </string>
				<key>trailing</key>
				<string>self.latestX=0; self.latestY=0; self.latestZ=0; self.calculatedActualAverageSamplingRateForFFT=nil; self.currentRoll=0; self.currentPitch=0
        self.recordingActualStartTime=nil; self.preRecordingPhaseStartTime=nil
        if self.useLinearAccelerationSetting { self.startLiveAttitudeMonitoring() }
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>24</string>
					<key>EndingLineNumber</key>
					<string>295</string>
					<key>StartingColumnNumber</key>
					<string>24</string>
					<key>StartingLineNumber</key>
					<string>295</string>
					<key>Timestamp</key>
					<string>769742271.096838</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>        self.measurementState = .idle; self.isFFTReady=false; self.elapsedTime=0
        self.updateIdleStateDisplayValues()
        self.latestX=0; </string>
				<key>trailing</key>
				<string>self.latestY=0; self.latestZ=0; self.calculatedActualAverageSamplingRateForFFT=nil; self.currentRoll=0; self.currentPitch=0
        self.recordingActualStartTime=nil; self.preRecordingPhaseStartTime=nil
        if self.useLinearAccelerationSetting { self.startLiveAttitudeMonitoring() }
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>40</string>
					<key>EndingLineNumber</key>
					<string>295</string>
					<key>StartingColumnNumber</key>
					<string>40</string>
					<key>StartingLineNumber</key>
					<string>295</string>
					<key>Timestamp</key>
					<string>769742271.096848</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>        self.measurementState = .idle; self.isFFTReady=false; self.elapsedTime=0
        self.updateIdleStateDisplayValues()
        self.latestX=0; self.latestY=0; </string>
				<key>trailing</key>
				<string>self.latestZ=0; self.calculatedActualAverageSamplingRateForFFT=nil; self.currentRoll=0; self.currentPitch=0
        self.recordingActualStartTime=nil; self.preRecordingPhaseStartTime=nil
        if self.useLinearAccelerationSetting { self.startLiveAttitudeMonitoring() }
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>56</string>
					<key>EndingLineNumber</key>
					<string>295</string>
					<key>StartingColumnNumber</key>
					<string>56</string>
					<key>StartingLineNumber</key>
					<string>295</string>
					<key>Timestamp</key>
					<string>769742271.096858</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>        self.measurementState = .idle; self.isFFTReady=false; self.elapsedTime=0
        self.updateIdleStateDisplayValues()
        self.latestX=0; self.latestY=0; self.latestZ=0; </string>
				<key>trailing</key>
				<string>self.calculatedActualAverageSamplingRateForFFT=nil; self.currentRoll=0; self.currentPitch=0
        self.recordingActualStartTime=nil; self.preRecordingPhaseStartTime=nil
        if self.useLinearAccelerationSetting { self.startLiveAttitudeMonitoring() }
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>108</string>
					<key>EndingLineNumber</key>
					<string>295</string>
					<key>StartingColumnNumber</key>
					<string>108</string>
					<key>StartingLineNumber</key>
					<string>295</string>
					<key>Timestamp</key>
					<string>769742271.096867</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>        self.measurementState = .idle; self.isFFTReady=false; self.elapsedTime=0
        self.updateIdleStateDisplayValues()
        self.latestX=0; self.latestY=0; self.latestZ=0; self.calculatedActualAverageSamplingRateForFFT=nil; </string>
				<key>trailing</key>
				<string>self.currentRoll=0; self.currentPitch=0
        self.recordingActualStartTime=nil; self.preRecordingPhaseStartTime=nil
        if self.useLinearAccelerationSetting { self.startLiveAttitudeMonitoring() }
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>128</string>
					<key>EndingLineNumber</key>
					<string>295</string>
					<key>StartingColumnNumber</key>
					<string>128</string>
					<key>StartingLineNumber</key>
					<string>295</string>
					<key>Timestamp</key>
					<string>769742271.0968781</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>        self.measurementState = .idle; self.isFFTReady=false; self.elapsedTime=0
        self.updateIdleStateDisplayValues()
        self.latestX=0; self.latestY=0; self.latestZ=0; self.calculatedActualAverageSamplingRateForFFT=nil; self.currentRoll=0; </string>
				<key>trailing</key>
				<string>self.currentPitch=0
        self.recordingActualStartTime=nil; self.preRecordingPhaseStartTime=nil
        if self.useLinearAccelerationSetting { self.startLiveAttitudeMonitoring() }
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>8</string>
					<key>EndingLineNumber</key>
					<string>296</string>
					<key>StartingColumnNumber</key>
					<string>8</string>
					<key>StartingLineNumber</key>
					<string>296</string>
					<key>Timestamp</key>
					<string>769742271.0968879</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>        self.updateIdleStateDisplayValues()
        self.latestX=0; self.latestY=0; self.latestZ=0; self.calculatedActualAverageSamplingRateForFFT=nil; self.currentRoll=0; self.currentPitch=0
        </string>
				<key>trailing</key>
				<string>self.recordingActualStartTime=nil; self.preRecordingPhaseStartTime=nil
        if self.useLinearAccelerationSetting { self.startLiveAttitudeMonitoring() }
        else { self.stopLiveAttitudeMonitoring() }
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>43</string>
					<key>EndingLineNumber</key>
					<string>296</string>
					<key>StartingColumnNumber</key>
					<string>43</string>
					<key>StartingLineNumber</key>
					<string>296</string>
					<key>Timestamp</key>
					<string>769742271.096897</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>        self.updateIdleStateDisplayValues()
        self.latestX=0; self.latestY=0; self.latestZ=0; self.calculatedActualAverageSamplingRateForFFT=nil; self.currentRoll=0; self.currentPitch=0
        self.recordingActualStartTime=nil; </string>
				<key>trailing</key>
				<string>self.preRecordingPhaseStartTime=nil
        if self.useLinearAccelerationSetting { self.startLiveAttitudeMonitoring() }
        else { self.stopLiveAttitudeMonitoring() }
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>11</string>
					<key>EndingLineNumber</key>
					<string>297</string>
					<key>StartingColumnNumber</key>
					<string>11</string>
					<key>StartingLineNumber</key>
					<string>297</string>
					<key>Timestamp</key>
					<string>769742271.096907</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>        self.latestX=0; self.latestY=0; self.latestZ=0; self.calculatedActualAverageSamplingRateForFFT=nil; self.currentRoll=0; self.currentPitch=0
        self.recordingActualStartTime=nil; self.preRecordingPhaseStartTime=nil
        if </string>
				<key>trailing</key>
				<string>self.useLinearAccelerationSetting { self.startLiveAttitudeMonitoring() }
        else { self.stopLiveAttitudeMonitoring() }
    }
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>47</string>
					<key>EndingLineNumber</key>
					<string>297</string>
					<key>StartingColumnNumber</key>
					<string>47</string>
					<key>StartingLineNumber</key>
					<string>297</string>
					<key>Timestamp</key>
					<string>769742271.096916</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>        self.latestX=0; self.latestY=0; self.latestZ=0; self.calculatedActualAverageSamplingRateForFFT=nil; self.currentRoll=0; self.currentPitch=0
        self.recordingActualStartTime=nil; self.preRecordingPhaseStartTime=nil
        if self.useLinearAccelerationSetting { </string>
				<key>trailing</key>
				<string>self.startLiveAttitudeMonitoring() }
        else { self.stopLiveAttitudeMonitoring() }
    }
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>15</string>
					<key>EndingLineNumber</key>
					<string>298</string>
					<key>StartingColumnNumber</key>
					<string>15</string>
					<key>StartingLineNumber</key>
					<string>298</string>
					<key>Timestamp</key>
					<string>769742271.096926</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>        self.recordingActualStartTime=nil; self.preRecordingPhaseStartTime=nil
        if self.useLinearAccelerationSetting { self.startLiveAttitudeMonitoring() }
        else { </string>
				<key>trailing</key>
				<string>self.stopLiveAttitudeMonitoring() }
    }

</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>35</string>
					<key>EndingLineNumber</key>
					<string>303</string>
					<key>StartingColumnNumber</key>
					<string>35</string>
					<key>StartingLineNumber</key>
					<string>303</string>
					<key>Timestamp</key>
					<string>769742271.096936</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>    @MainActor
    func resetDataForNewRecording() {
        Axis.allCases.forEach{a in </string>
				<key>trailing</key>
				<string>self.timeSeriesData[a]?.removeAll(); self.fftMagnitudes[a]?.removeAll()}
        self.fftFrequencies.removeAll(); self.lastProcessedSampleTimestamp=0
        self.resetRMSValuesAndAttitude()
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>72</string>
					<key>EndingLineNumber</key>
					<string>303</string>
					<key>StartingColumnNumber</key>
					<string>72</string>
					<key>StartingLineNumber</key>
					<string>303</string>
					<key>Timestamp</key>
					<string>769742271.096947</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>    @MainActor
    func resetDataForNewRecording() {
        Axis.allCases.forEach{a in self.timeSeriesData[a]?.removeAll(); </string>
				<key>trailing</key>
				<string>self.fftMagnitudes[a]?.removeAll()}
        self.fftFrequencies.removeAll(); self.lastProcessedSampleTimestamp=0
        self.resetRMSValuesAndAttitude()
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>8</string>
					<key>EndingLineNumber</key>
					<string>304</string>
					<key>StartingColumnNumber</key>
					<string>8</string>
					<key>StartingLineNumber</key>
					<string>304</string>
					<key>Timestamp</key>
					<string>769742271.096959</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>    func resetDataForNewRecording() {
        Axis.allCases.forEach{a in self.timeSeriesData[a]?.removeAll(); self.fftMagnitudes[a]?.removeAll()}
        </string>
				<key>trailing</key>
				<string>self.fftFrequencies.removeAll(); self.lastProcessedSampleTimestamp=0
        self.resetRMSValuesAndAttitude()
    }
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>41</string>
					<key>EndingLineNumber</key>
					<string>304</string>
					<key>StartingColumnNumber</key>
					<string>41</string>
					<key>StartingLineNumber</key>
					<string>304</string>
					<key>Timestamp</key>
					<string>769742271.096969</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>    func resetDataForNewRecording() {
        Axis.allCases.forEach{a in self.timeSeriesData[a]?.removeAll(); self.fftMagnitudes[a]?.removeAll()}
        self.fftFrequencies.removeAll(); </string>
				<key>trailing</key>
				<string>self.lastProcessedSampleTimestamp=0
        self.resetRMSValuesAndAttitude()
    }
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>8</string>
					<key>EndingLineNumber</key>
					<string>305</string>
					<key>StartingColumnNumber</key>
					<string>8</string>
					<key>StartingLineNumber</key>
					<string>305</string>
					<key>Timestamp</key>
					<string>769742271.096981</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>        Axis.allCases.forEach{a in self.timeSeriesData[a]?.removeAll(); self.fftMagnitudes[a]?.removeAll()}
        self.fftFrequencies.removeAll(); self.lastProcessedSampleTimestamp=0
        </string>
				<key>trailing</key>
				<string>self.resetRMSValuesAndAttitude()
    }
    
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>14</string>
					<key>EndingLineNumber</key>
					<string>310</string>
					<key>StartingColumnNumber</key>
					<string>14</string>
					<key>StartingLineNumber</key>
					<string>310</string>
					<key>Timestamp</key>
					<string>769742271.096992</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>    @MainActor
    func captureNewSamples() {
        guard </string>
				<key>trailing</key>
				<string>self.measurementState == .recording || (self.measurementState == .completed &amp;&amp; self.dataFetchTimer == nil &amp;&amp; !self.isRecording) else {return}
        let aRD=self.recorder.getRecordedData(); let nS=aRD.filter{$0.timestamp &gt; self.lastProcessedSampleTimestamp}; guard !nS.isEmpty else {return}
        var cMAY=abs(self.axisRanges.maxY)
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>54</string>
					<key>EndingLineNumber</key>
					<string>310</string>
					<key>StartingColumnNumber</key>
					<string>54</string>
					<key>StartingLineNumber</key>
					<string>310</string>
					<key>Timestamp</key>
					<string>769742271.097002</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>    @MainActor
    func captureNewSamples() {
        guard self.measurementState == .recording || (</string>
				<key>trailing</key>
				<string>self.measurementState == .completed &amp;&amp; self.dataFetchTimer == nil &amp;&amp; !self.isRecording) else {return}
        let aRD=self.recorder.getRecordedData(); let nS=aRD.filter{$0.timestamp &gt; self.lastProcessedSampleTimestamp}; guard !nS.isEmpty else {return}
        var cMAY=abs(self.axisRanges.maxY)
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>93</string>
					<key>EndingLineNumber</key>
					<string>310</string>
					<key>StartingColumnNumber</key>
					<string>93</string>
					<key>StartingLineNumber</key>
					<string>310</string>
					<key>Timestamp</key>
					<string>769742271.097011</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>    @MainActor
    func captureNewSamples() {
        guard self.measurementState == .recording || (self.measurementState == .completed &amp;&amp; </string>
				<key>trailing</key>
				<string>self.dataFetchTimer == nil &amp;&amp; !self.isRecording) else {return}
        let aRD=self.recorder.getRecordedData(); let nS=aRD.filter{$0.timestamp &gt; self.lastProcessedSampleTimestamp}; guard !nS.isEmpty else {return}
        var cMAY=abs(self.axisRanges.maxY)
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>124</string>
					<key>EndingLineNumber</key>
					<string>310</string>
					<key>StartingColumnNumber</key>
					<string>124</string>
					<key>StartingLineNumber</key>
					<string>310</string>
					<key>Timestamp</key>
					<string>769742271.097023</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>    @MainActor
    func captureNewSamples() {
        guard self.measurementState == .recording || (self.measurementState == .completed &amp;&amp; self.dataFetchTimer == nil &amp;&amp; !</string>
				<key>trailing</key>
				<string>self.isRecording) else {return}
        let aRD=self.recorder.getRecordedData(); let nS=aRD.filter{$0.timestamp &gt; self.lastProcessedSampleTimestamp}; guard !nS.isEmpty else {return}
        var cMAY=abs(self.axisRanges.maxY)
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>16</string>
					<key>EndingLineNumber</key>
					<string>311</string>
					<key>StartingColumnNumber</key>
					<string>16</string>
					<key>StartingLineNumber</key>
					<string>311</string>
					<key>Timestamp</key>
					<string>769742271.097032</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>    func captureNewSamples() {
        guard self.measurementState == .recording || (self.measurementState == .completed &amp;&amp; self.dataFetchTimer == nil &amp;&amp; !self.isRecording) else {return}
        let aRD=</string>
				<key>trailing</key>
				<string>self.recorder.getRecordedData(); let nS=aRD.filter{$0.timestamp &gt; self.lastProcessedSampleTimestamp}; guard !nS.isEmpty else {return}
        var cMAY=abs(self.axisRanges.maxY)
        for s in nS{
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>82</string>
					<key>EndingLineNumber</key>
					<string>311</string>
					<key>StartingColumnNumber</key>
					<string>82</string>
					<key>StartingLineNumber</key>
					<string>311</string>
					<key>Timestamp</key>
					<string>769742271.097042</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>    func captureNewSamples() {
        guard self.measurementState == .recording || (self.measurementState == .completed &amp;&amp; self.dataFetchTimer == nil &amp;&amp; !self.isRecording) else {return}
        let aRD=self.recorder.getRecordedData(); let nS=aRD.filter{$0.timestamp &gt; </string>
				<key>trailing</key>
				<string>self.lastProcessedSampleTimestamp}; guard !nS.isEmpty else {return}
        var cMAY=abs(self.axisRanges.maxY)
        for s in nS{
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>21</string>
					<key>EndingLineNumber</key>
					<string>312</string>
					<key>StartingColumnNumber</key>
					<string>21</string>
					<key>StartingLineNumber</key>
					<string>312</string>
					<key>Timestamp</key>
					<string>769742271.097051</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>        guard self.measurementState == .recording || (self.measurementState == .completed &amp;&amp; self.dataFetchTimer == nil &amp;&amp; !self.isRecording) else {return}
        let aRD=self.recorder.getRecordedData(); let nS=aRD.filter{$0.timestamp &gt; self.lastProcessedSampleTimestamp}; guard !nS.isEmpty else {return}
        var cMAY=abs(</string>
				<key>trailing</key>
				<string>self.axisRanges.maxY)
        for s in nS{
            self.timeSeriesData[Axis.x]?.append(.init(timestamp:s.timestamp,value:s.x))
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>38</string>
					<key>EndingLineNumber</key>
					<string>320</string>
					<key>StartingColumnNumber</key>
					<string>38</string>
					<key>StartingLineNumber</key>
					<string>320</string>
					<key>Timestamp</key>
					<string>769742271.097061</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>            self.latestX=s.x; self.latestY=s.y; self.latestZ=s.z
        }
        if let lastTimestamp = nS.last</string>
				<key>trailing</key>
				<string>?.timestamp {
            self.lastProcessedSampleTimestamp = lastTimestamp
        }
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>11</string>
					<key>EndingLineNumber</key>
					<string>321</string>
					<key>StartingColumnNumber</key>
					<string>11</string>
					<key>StartingLineNumber</key>
					<string>321</string>
					<key>Timestamp</key>
					<string>769742271.09707</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>        }
        if let lastTimestamp = nS.last?.timestamp {
           </string>
				<key>trailing</key>
				<string> self.lastProcessedSampleTimestamp = lastTimestamp
        }
        
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>61</string>
					<key>EndingLineNumber</key>
					<string>321</string>
					<key>StartingColumnNumber</key>
					<string>61</string>
					<key>StartingLineNumber</key>
					<string>321</string>
					<key>Timestamp</key>
					<string>769742382.44004</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>        }
        if let lastTimestamp = nS.last?.timestamp {
            self.lastProcessedSampleTimestamp = lastTimestamp</string>
				<key>trailing</key>
				<string>
        }
        
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>61</string>
					<key>EndingLineNumber</key>
					<string>321</string>
					<key>StartingColumnNumber</key>
					<string>61</string>
					<key>StartingLineNumber</key>
					<string>321</string>
					<key>Timestamp</key>
					<string>769742382.439966</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>        }
        if let lastTimestamp = nS.last?.timestamp {
            self.lastProcessedSampleTimestamp = lastTimestamp</string>
				<key>trailing</key>
				<string>
        }
        
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>22</string>
					<key>EndingLineNumber</key>
					<string>325</string>
					<key>StartingColumnNumber</key>
					<string>22</string>
					<key>StartingLineNumber</key>
					<string>325</string>
					<key>Timestamp</key>
					<string>769742271.097098</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>        
        if self.measurementState == .recording {
            let newDyn</string>
				<key>trailing</key>
				<string>amicMaxY = (cMAY.isFinite &amp;&amp; cMAY &gt; 0.00001) ? cMAY : 1.0 // Use a small epsilon for zero-check
            self.axisRanges.minY = -newDynamicMaxY
            self.axisRanges.maxY = newDynamicMaxY
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>4</string>
					<key>EndingLineNumber</key>
					<string>330</string>
					<key>StartingColumnNumber</key>
					<string>4</string>
					<key>StartingLineNumber</key>
					<string>330</string>
					<key>Timestamp</key>
					<string>769742382.440151</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>        }
    }
    </string>
				<key>trailing</key>
				<string>
    private func calculateOverallRMS(for axis: Axis) -&gt; Double {
        guard let dPs=self.timeSeriesData[axis],!dPs.isEmpty else{return 0.0}
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>5</string>
					<key>EndingLineNumber</key>
					<string>334</string>
					<key>StartingColumnNumber</key>
					<string>5</string>
					<key>StartingLineNumber</key>
					<string>334</string>
					<key>Timestamp</key>
					<string>769742382.439898</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>        guard let dPs=self.timeSeriesData[axis],!dPs.isEmpty else{return 0.0}
        let v=dPs.map{$0.value};let sOS=v.reduce(0.0){$0+($1*$1)};return sqrt(sOS/Double(v.count))
    }</string>
				<key>trailing</key>
				<string>
    
    private func calculateActualAverageRate() {
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>5</string>
					<key>EndingLineNumber</key>
					<string>334</string>
					<key>StartingColumnNumber</key>
					<string>5</string>
					<key>StartingLineNumber</key>
					<string>334</string>
					<key>Timestamp</key>
					<string>769742382.440161</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>        guard let dPs=self.timeSeriesData[axis],!dPs.isEmpty else{return 0.0}
        let v=dPs.map{$0.value};let sOS=v.reduce(0.0){$0+($1*$1)};return sqrt(sOS/Double(v.count))
    }</string>
				<key>trailing</key>
				<string>
    
    private func calculateActualAverageRate() {
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>8</string>
					<key>EndingLineNumber</key>
					<string>340</string>
					<key>StartingColumnNumber</key>
					<string>8</string>
					<key>StartingLineNumber</key>
					<string>340</string>
					<key>Timestamp</key>
					<string>769742271.097138</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>              let firstTimestamp = xDataPoints.first?.timestamp,
              let lastTimestamp = xDataPoints.last?.timestamp,
        </string>
				<key>trailing</key>
				<string>      lastTimestamp &gt; firstTimestamp else {
            self.calculatedActualAverageSamplingRateForFFT = Double(self.actualCoreMotionRequestRate)
            return
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>51</string>
					<key>EndingLineNumber</key>
					<string>340</string>
					<key>StartingColumnNumber</key>
					<string>51</string>
					<key>StartingLineNumber</key>
					<string>340</string>
					<key>Timestamp</key>
					<string>769742382.440022</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>              let firstTimestamp = xDataPoints.first?.timestamp,
              let lastTimestamp = xDataPoints.last?.timestamp,
              lastTimestamp &gt; firstTimestamp else {</string>
				<key>trailing</key>
				<string>
            self.calculatedActualAverageSamplingRateForFFT = Double(self.actualCoreMotionRequestRate)
            return
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>14</string>
					<key>EndingLineNumber</key>
					<string>345</string>
					<key>StartingColumnNumber</key>
					<string>14</string>
					<key>StartingLineNumber</key>
					<string>345</string>
					<key>Timestamp</key>
					<string>769742271.097158</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>        }
        let numberOfActualSamples = Double(xDataPoints.count)
        let ac</string>
				<key>trailing</key>
				<string>tualRecordingDuration = lastTimestamp - firstTimestamp
        let rate = (numberOfActualSamples - 1.0) / actualRecordingDuration
        self.calculatedActualAverageSamplingRateForFFT = (rate &gt; 0 &amp;&amp; rate.isFinite) ? rate : Double(self.actualCoreMotionRequestRate)
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>63</string>
					<key>EndingLineNumber</key>
					<string>345</string>
					<key>StartingColumnNumber</key>
					<string>63</string>
					<key>StartingLineNumber</key>
					<string>345</string>
					<key>Timestamp</key>
					<string>769742271.097167</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>        }
        let numberOfActualSamples = Double(xDataPoints.count)
        let actualRecordingDuration = lastTimestamp - firstTime</string>
				<key>trailing</key>
				<string>stamp
        let rate = (numberOfActualSamples - 1.0) / actualRecordingDuration
        self.calculatedActualAverageSamplingRateForFFT = (rate &gt; 0 &amp;&amp; rate.isFinite) ? rate : Double(self.actualCoreMotionRequestRate)
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>68</string>
					<key>EndingLineNumber</key>
					<string>345</string>
					<key>StartingColumnNumber</key>
					<string>68</string>
					<key>StartingLineNumber</key>
					<string>345</string>
					<key>Timestamp</key>
					<string>769742382.439757</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>        }
        let numberOfActualSamples = Double(xDataPoints.count)
        let actualRecordingDuration = lastTimestamp - firstTimestamp</string>
				<key>trailing</key>
				<string>
        let rate = (numberOfActualSamples - 1.0) / actualRecordingDuration
        self.calculatedActualAverageSamplingRateForFFT = (rate &gt; 0 &amp;&amp; rate.isFinite) ? rate : Double(self.actualCoreMotionRequestRate)
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>8</string>
					<key>EndingLineNumber</key>
					<string>346</string>
					<key>StartingColumnNumber</key>
					<string>8</string>
					<key>StartingLineNumber</key>
					<string>346</string>
					<key>Timestamp</key>
					<string>769742271.097187</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>        let numberOfActualSamples = Double(xDataPoints.count)
        let actualRecordingDuration = lastTimestamp - firstTimestamp
        </string>
				<key>trailing</key>
				<string>let rate = (numberOfActualSamples - 1.0) / actualRecordingDuration
        self.calculatedActualAverageSamplingRateForFFT = (rate &gt; 0 &amp;&amp; rate.isFinite) ? rate : Double(self.actualCoreMotionRequestRate)
    }
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>18</string>
					<key>EndingLineNumber</key>
					<string>347</string>
					<key>StartingColumnNumber</key>
					<string>18</string>
					<key>StartingLineNumber</key>
					<string>347</string>
					<key>Timestamp</key>
					<string>769742271.097196</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>        let actualRecordingDuration = lastTimestamp - firstTimestamp
        let rate = (numberOfActualSamples - 1.0) / actualRecordingDuration
        self.calcu</string>
				<key>trailing</key>
				<string>latedActualAverageSamplingRateForFFT = (rate &gt; 0 &amp;&amp; rate.isFinite) ? rate : Double(self.actualCoreMotionRequestRate)
    }
    
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>60</string>
					<key>EndingLineNumber</key>
					<string>347</string>
					<key>StartingColumnNumber</key>
					<string>60</string>
					<key>StartingLineNumber</key>
					<string>347</string>
					<key>Timestamp</key>
					<string>769742271.097206</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>        let actualRecordingDuration = lastTimestamp - firstTimestamp
        let rate = (numberOfActualSamples - 1.0) / actualRecordingDuration
        self.calculatedActualAverageSamplingRateForFFT = (ra</string>
				<key>trailing</key>
				<string>te &gt; 0 &amp;&amp; rate.isFinite) ? rate : Double(self.actualCoreMotionRequestRate)
    }
    
</string>
			</dict>
			<key>title</key>
			<string>Error: Value of type '[Any]' has no member 'value'</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>5</string>
					<key>EndingLineNumber</key>
					<string>348</string>
					<key>StartingColumnNumber</key>
					<string>5</string>
					<key>StartingLineNumber</key>
					<string>348</string>
					<key>Timestamp</key>
					<string>769742382.4399101</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>        let rate = (numberOfActualSamples - 1.0) / actualRecordingDuration
        self.calculatedActualAverageSamplingRateForFFT = (rate &gt; 0 &amp;&amp; rate.isFinite) ? rate : Double(self.actualCoreMotionRequestRate)
    }</string>
				<key>trailing</key>
				<string>
    
    @MainActor
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>5</string>
					<key>EndingLineNumber</key>
					<string>348</string>
					<key>StartingColumnNumber</key>
					<string>5</string>
					<key>StartingLineNumber</key>
					<string>348</string>
					<key>Timestamp</key>
					<string>769742382.440141</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>        let rate = (numberOfActualSamples - 1.0) / actualRecordingDuration
        self.calculatedActualAverageSamplingRateForFFT = (rate &gt; 0 &amp;&amp; rate.isFinite) ? rate : Double(self.actualCoreMotionRequestRate)
    }</string>
				<key>trailing</key>
				<string>
    
    @MainActor
</string>
			</dict>
			<key>title</key>
			<string>Error: Value of type '[Any]' has no member 'value'</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>4</string>
					<key>EndingLineNumber</key>
					<string>349</string>
					<key>StartingColumnNumber</key>
					<string>4</string>
					<key>StartingLineNumber</key>
					<string>349</string>
					<key>Timestamp</key>
					<string>769742382.439712</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>        self.calculatedActualAverageSamplingRateForFFT = (rate &gt; 0 &amp;&amp; rate.isFinite) ? rate : Double(self.actualCoreMotionRequestRate)
    }
    </string>
				<key>trailing</key>
				<string>
    @MainActor
    func computeFFT() {
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>4</string>
					<key>EndingLineNumber</key>
					<string>349</string>
					<key>StartingColumnNumber</key>
					<string>4</string>
					<key>StartingLineNumber</key>
					<string>349</string>
					<key>Timestamp</key>
					<string>769742382.440125</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>        self.calculatedActualAverageSamplingRateForFFT = (rate &gt; 0 &amp;&amp; rate.isFinite) ? rate : Double(self.actualCoreMotionRequestRate)
    }
    </string>
				<key>trailing</key>
				<string>
    @MainActor
    func computeFFT() {
</string>
			</dict>
			<key>title</key>
			<string>Error: Value of type '[Any]' has no member 'value'</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>14</string>
					<key>EndingLineNumber</key>
					<string>350</string>
					<key>StartingColumnNumber</key>
					<string>14</string>
					<key>StartingLineNumber</key>
					<string>350</string>
					<key>Timestamp</key>
					<string>769742382.439695</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>    }
    
    @MainActor</string>
				<key>trailing</key>
				<string>
    func computeFFT() {
        guard self.collectedSamplesCount &gt; 0, let rateForFFT = self.calculatedActualAverageSamplingRateForFFT else {self.isFFTReady = false; return}
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>23</string>
					<key>EndingLineNumber</key>
					<string>351</string>
					<key>StartingColumnNumber</key>
					<string>23</string>
					<key>StartingLineNumber</key>
					<string>351</string>
					<key>Timestamp</key>
					<string>769742382.439746</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>    
    @MainActor
    func computeFFT() {</string>
				<key>trailing</key>
				<string>
        guard self.collectedSamplesCount &gt; 0, let rateForFFT = self.calculatedActualAverageSamplingRateForFFT else {self.isFFTReady = false; return}
        self.isFFTReady = false
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>11</string>
					<key>EndingLineNumber</key>
					<string>367</string>
					<key>StartingColumnNumber</key>
					<string>11</string>
					<key>StartingLineNumber</key>
					<string>367</string>
					<key>Timestamp</key>
					<string>769742271.097285</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>                strongSelf.fftMagnitudes[Axis.x]=rX.magnitude
                strongSelf.fftMagnitudes[Axis.y]=rY.magnitude
           </string>
				<key>trailing</key>
				<string>     strongSelf.fftMagnitudes[Axis.z]=rZ.magnitude
                strongSelf.isFFTReady = true
            }
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>46</string>
					<key>EndingLineNumber</key>
					<string>367</string>
					<key>StartingColumnNumber</key>
					<string>46</string>
					<key>StartingLineNumber</key>
					<string>367</string>
					<key>Timestamp</key>
					<string>769742271.097294</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>                strongSelf.fftMagnitudes[Axis.x]=rX.magnitude
                strongSelf.fftMagnitudes[Axis.y]=rY.magnitude
                strongSelf.fftMagnitudes[Axis.</string>
				<key>trailing</key>
				<string>z]=rZ.magnitude
                strongSelf.isFFTReady = true
            }
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>61</string>
					<key>EndingLineNumber</key>
					<string>367</string>
					<key>StartingColumnNumber</key>
					<string>61</string>
					<key>StartingLineNumber</key>
					<string>367</string>
					<key>Timestamp</key>
					<string>769742382.440028</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>                strongSelf.fftMagnitudes[Axis.x]=rX.magnitude
                strongSelf.fftMagnitudes[Axis.y]=rY.magnitude
                strongSelf.fftMagnitudes[Axis.z]=rZ.magnitude</string>
				<key>trailing</key>
				<string>
                strongSelf.isFFTReady = true
            }
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>61</string>
					<key>EndingLineNumber</key>
					<string>367</string>
					<key>StartingColumnNumber</key>
					<string>61</string>
					<key>StartingLineNumber</key>
					<string>367</string>
					<key>Timestamp</key>
					<string>769742382.440107</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>                strongSelf.fftMagnitudes[Axis.x]=rX.magnitude
                strongSelf.fftMagnitudes[Axis.y]=rY.magnitude
                strongSelf.fftMagnitudes[Axis.z]=rZ.magnitude</string>
				<key>trailing</key>
				<string>
                strongSelf.isFFTReady = true
            }
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>372</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>372</string>
					<key>Timestamp</key>
					<string>769742382.439732</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>        }
    }
</string>
				<key>trailing</key>
				<string>
    @MainActor func toggleAxisVisibility(_ axis: Axis) {
        if self.activeAxes.contains(axis){ if self.activeAxes.count &gt; 1{self.activeAxes.remove(axis)}} else{self.activeAxes.insert(axis)}
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>23</string>
					<key>EndingLineNumber</key>
					<string>374</string>
					<key>StartingColumnNumber</key>
					<string>23</string>
					<key>StartingLineNumber</key>
					<string>374</string>
					<key>Timestamp</key>
					<string>769742271.097332</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>
    @MainActor func toggleAxisVisibility(_ axis: Axis) {
        if self.activeA</string>
				<key>trailing</key>
				<string>xes.contains(axis){ if self.activeAxes.count &gt; 1{self.activeAxes.remove(axis)}} else{self.activeAxes.insert(axis)}
    }
    
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>5</string>
					<key>EndingLineNumber</key>
					<string>375</string>
					<key>StartingColumnNumber</key>
					<string>5</string>
					<key>StartingLineNumber</key>
					<string>375</string>
					<key>Timestamp</key>
					<string>769742382.440044</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>    @MainActor func toggleAxisVisibility(_ axis: Axis) {
        if self.activeAxes.contains(axis){ if self.activeAxes.count &gt; 1{self.activeAxes.remove(axis)}} else{self.activeAxes.insert(axis)}
    }</string>
				<key>trailing</key>
				<string>
    
    @MainActor
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>4</string>
					<key>EndingLineNumber</key>
					<string>376</string>
					<key>StartingColumnNumber</key>
					<string>4</string>
					<key>StartingLineNumber</key>
					<string>376</string>
					<key>Timestamp</key>
					<string>769742382.439683</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>        if self.activeAxes.contains(axis){ if self.activeAxes.count &gt; 1{self.activeAxes.remove(axis)}} else{self.activeAxes.insert(axis)}
    }
    </string>
				<key>trailing</key>
				<string>
    @MainActor
    func exportCSV() {
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>47</string>
					<key>EndingLineNumber</key>
					<string>388</string>
					<key>StartingColumnNumber</key>
					<string>47</string>
					<key>StartingLineNumber</key>
					<string>388</string>
					<key>Timestamp</key>
					<string>769742382.439738</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>DynaVibe/ViewModels/AccelerationViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>        var csvString = csvHeader
        
        let numberFormatter = NumberFormatter()</string>
				<key>trailing</key>
				<string>
        numberFormatter.minimumFractionDigits = 4
        numberFormatter.maximumFractionDigits = 8
</string>
			</dict>
			<key>title</key>
			<string>Error: Cannot find 'self' in scope; did you mean to use it in a type or extension context?</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
	</array>
</dict>
</plist>
